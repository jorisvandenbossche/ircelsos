# -*- coding: utf-8 -*-
"""
Utilities
"""
from __future__ import print_function

import os
import io
import xml.etree.ElementTree as ET
import datetime
import pprint
try:
    # Python 3
    from urllib.parse import urlencode
except ImportError:
    # Python 2
    from urllib import urlencode

from owslib.util import openURL

from .sos import BASE_URL
from . import SOS


def get_feature_of_interest(feature_id):

    request = {'service': 'SOS',
               'version': SOS.version,
               'request': 'GetFeatureOfInterest'}
    request['FeatureOfInterestId'] = feature_id

    data = urlencode(request)
    response = openURL(BASE_URL, data, method='Get').read()

    if isinstance(response, bytes):
        response = io.BytesIO(response)
    elif isinstance(response, str):
        response = io.StringIO(response)

    #tree = ET.parse('temp.xml')
    tree = ET.parse(response)

    root = tree.getroot()

    if not root.tag == '{http://www.opengis.net/sampling/1.0}SamplingPoint':
        raise ValueError(
            "feature_id {feature_id} is not a SamplingPoint".format(
                feature_id=feature_id))

    st_info = {}
    st_info['id'] = root.attrib['{http://www.opengis.net/gml}id']
    st_info['description'] = root.find('{http://www.opengis.net/gml}description').text
    st_info['long_name'] = root.find('{http://www.opengis.net/gml}name').text
    name, _ = st_info['long_name'].split(' - ')
    st_info['name'] = name
    position = root.find('{http://www.opengis.net/sampling/1.0}position')
    point = position.find('{http://www.opengis.net/gml}Point')
    pos = point.find('{http://www.opengis.net/gml}pos').text
    x, y = pos.split(' ')
    st_info['x'] = x
    st_info['y'] = y

    return st_info


def _list_stations():

    stations_lists = []

    for off in SOS.offerings:
        stations_lists.append(off.features_of_interest)

    stations = [station for stations in stations_lists for station in stations]

    return set(stations)


_STATIONS_FILE_TEMPLATE = """# -*- coding: utf-8 -*-
\"\"\"
Overview of all stations.

ATTENTION: this is a auto-generated file!
Generated by 'util.py:_generate_stations_list' at {timestamp}.
\"\"\"

STATIONS = \\
{station_dict}
"""


def _generate_stations_list():

    stations = _list_stations()

    st_info = {}

    for station in stations:
        try:
            st_info[station] = get_feature_of_interest(station)
            print("Got feature_id {0}".format(station))
        except ValueError as exc:
            print(exc)
            continue

    filename = os.path.realpath(__file__)
    base_dir = os.path.abspath(os.path.dirname(filename))

    with open(os.path.join(base_dir, '_stations.py'), 'w') as stations_file:

        content = _STATIONS_FILE_TEMPLATE.format(
            station_dict=pprint.pformat(st_info),
            timestamp=datetime.datetime.today().replace(microsecond=0))

        stations_file.write(content)
